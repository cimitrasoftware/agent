#!/bin/bash
### BEGIN INIT INFO
# Provides:          cimitra
# Required-Start:    $syslog
# Required-Stop:     $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Cimitra Agent
# Description:       Start Cimitra Agent
### END INIT INFO


cimitra="cimagent" 
declare -i CIMITRA_RUNNING=0
prog="$0"
PATH=/usr/local/bin:/usr/local/sbin:~/bin:/usr/bin:/bin:/usr/sbin:/sbin

function discover_modules()
{
MODULE_ROOT_PATH="/var/opt/cimitra/api"
test -d $MODULE_ROOT_PATH
declare -i EXIT_STATUS=$?

if [ $EXIT_STATUS -ne 0 ]
then
return
fi

declare -i NUMBER_OF_MODULES="$(find /var/opt/cimitra/api/* -maxdepth 1 -type d  | wc -l)"

if [ $NUMBER_OF_MODULES -gt 0 ]
then
echo ""
echo "Or use the following installed Cimitra API Modules:"
echo ""
fi

declare -i COUNTER=1
while [ $COUNTER -le $NUMBER_OF_MODULES ]
do
THE_MODULE_PATH="$(find /var/opt/cimitra/api/* -maxdepth 1 -type d  | head -$COUNTER | tail -1)"

THE_MODULE="$(basename $THE_MODULE_PATH | head -$COUNTER | tail -1)"
echo "cimitra $THE_MODULE"
echo ""

let COUNTER=COUNTER+1
done

}


function get_api_module()
{

MODULE="$1"

INSTALL_DIR="/var/opt/cimitra/api/$MODULE"

mkdir -p $INSTALL_DIR

declare -i RESULT="$( echo $? )"

if [ $RESULT -ne 0 ]
then
echo ""
echo "Error: Cannot Access Directory $INSTALL_DIR"
echo ""
exit 1
fi

cd $INSTALL_DIR

if [ $RESULT -ne 0 ]
then
echo ""
echo "Error: Cannot Access Directory $INSTALL_DIR"
echo ""
exit 1
fi

curl -LJO https://raw.githubusercontent.com/cimitrasoftware/nix-api-$MODULE/master/install

chmod +x ./install

./install

}

function stop()
{

grep_cimitra="$( ps aux | grep -v grep | grep -c 'cimagent s')"
    
if [ $grep_cimitra -gt 0 ]
 then

	PID="$( ps aux | grep -v grep | grep 'cimagent s' | tail -1 | awk '{ print $2 }' )"
	$( sudo kill -2 $PID )
	RETVAL=$?
	echo "Stopped Cimitra Agent"
 else
	echo "Cimitra Agent is not running"
 fi

}

function start()
{
stop
while [ $CIMITRA_RUNNING -eq 0 ]
do

/usr/bin/cimagent s & 
sleep 10

CIMITRA_RUNNING="$( ps -eaf | grep -v grep | grep -c 'cimagent s' )"

done
echo "Started Cimitra Agent"
}

function status()
{

grep_cimitra="$( ps aux | grep -v grep | grep -c 'cimagent s' )"

    
if [ $grep_cimitra -gt 0 ]
 then

	PID="$( ps aux | grep -v grep | grep cimagent | tail -1 | awk '{ print $2 }' )"
	echo "Cimitra is running on PID: $PID"
 else
	echo "Cimitra is not running"
 fi


}

function backup()
{
	
BACKUP_PATH="$1"

if [ -z "$BACKUP_PATH" ]
then
    echo "Please input a backup path."
	exit 1
fi

if [ -w $BACKUP_PATH ]
then
:
else
    echo "Please input a backup path that can be written to."
	exit 1	
fi

/usr/bin/cimagent --backup	$BACKUP_PATH	
	
}


case "$1" in
    start)
	start 
	;;
    stop)
	stop
	;;
    restart)
	stop
	start
	;;
    status)
	status
	;;
    backup)
	backup "$2"
	;;
    get)
	get_api_module "$2"
	;;
      *)
	MODULE="$1"

	MODULE_DIR="/var/opt/cimitra/api/$MODULE"
	
	test -f $MODULE_DIR/$MODULE

	declare -i RESULT="$( echo $? )"

	if [ $RESULT -eq 0 ]
	then

	cd $MODULE_DIR

	COMMAND="$(printf %q "$BASH_SOURCE")$((($#)) && printf ' %q' "$@")"

	COMMAND_LINE="$( echo $COMMAND |  sed 's/\/usr\/bin\/cimitra//g' | sed "s/$MODULE//g" )"

	bash -c "./$MODULE $COMMAND_LINE"
	else
	echo ""
	echo $"Usage: cimitra {start|stop|restart|status}"
	discover_modules
	fi
	;;
esac


exit $RETVAL
